Imports System
Imports System.Linq
Imports System.Collections.Generic

'-------------------------------------------------------
' Automatically generated with Kodeo's Reegenerator
' Generator: RgenTemplate (internal)
' Generation date: 2014-02-14 10:52
' Generated by: GATSU-DEV\Tedy.Pranolo
' -------------------------------------------------------

<System.CodeDom.Compiler.GeneratedCodeAttribute("Reegenerator", "2.0.5.0"), _
 Kodeo.Reegenerator.Generators.TemplateDisplayAttribute(DisplayName:="NotifyPropertyChanged", Description:="NotifyPropertyChanged", HideInDialog:=False)> _
Partial Public Class NotifyPropertyChanged
    Inherits CodeRendererEx

    '''<summary>
    '''Renders the code as defined in the source script file.
    '''</summary>
    '''<param name="className"></param>
    '''<param name="IncludeNPC"></param>
    Public Overridable Sub OutFunctions(ByVal className As String, ByVal IncludeNPC As Boolean)
        Me.Output.Write("" & Global.Microsoft.VisualBasic.ChrW(9))
        If IncludeNPC Then
            Me.Output.Write(" " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    Public Event PropertyChanged(ByVal sender As Object, ByVal e As System.Com" & _
                    "ponentModel.PropertyChangedEventArgs) _" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        Implements ")
            Me.Output.Write(Me.ProjectItem.Project.DefaultNamespace)
            Me.Output.Write(".")
            Me.Output.Write(LibraryRenderer.INotifierName)
            Me.Output.Write(".PropertyChanged" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9))
        End If
        Me.Output.Write("" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    Sub NotifyPropertyChanged(ByVal propertyName As String) Implements ")
        Me.Output.Write(LibraryRenderer.INotifierName)
        Me.Output.Write(".Notify" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        RaiseEvent PropertyChanged(Me, New System.ComponentModel.Propert" & _
                "yChangedEventArgs(propertyName))" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    End Sub")
        Me.Output.WriteLine()
    End Sub

    '''<summary>
    '''Renders the code as defined in the source script file.
    '''</summary>
    Public Overridable Sub Test()
        Me.Output.WriteLine()
    End Sub

    '''<summary>
    '''Renders the code as defined in the source script file.
    '''</summary>
    '''<param name="tag"></param>
    '''<param name="propName"></param>
    '''<param name="propType"></param>
    '''<param name="existingComment"></param>
    '''<param name="attributes"></param>
    '''<param name="interfaceImpl"></param>
    Public Overridable Sub OutProperty(ByVal tag As String, ByVal propName As String, ByVal propType As String, ByVal existingComment As String, ByVal attributes As String, ByVal interfaceImpl As String)
        Me.Output.Write("" & Global.Microsoft.VisualBasic.ChrW(9) & "#Region """)
        Me.Output.Write(tag)
        Me.Output.Write("""" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    Private _")
        Me.Output.Write(propName)
        Me.Output.Write(" As ")
        Me.Output.Write(propType)
        Me.Output.Write("" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9))
        Me.Output.Write(existingComment)
        Me.Output.Write("" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9))
        Me.Output.Write(attributes)
        Me.Output.Write("" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & "Property ")
        Me.Output.Write(propName)
        Me.Output.Write("() As ")
        Me.Output.Write(propType)
        Me.Output.Write(interfaceImpl)
        Me.Output.Write("" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        Get" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "            Return _")
        Me.Output.Write(propName)
        Me.Output.Write("" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        End Get" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        Set(ByVal value As ")
        Me.Output.Write(propType)
        Me.Output.Write(")" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "            ")
        ' Left empty to be filled by Generated code
        Me.Output.Write("" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        End Set" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    End Property" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & "#End Region")
        Me.Output.WriteLine()
    End Sub
End Class
